consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
swagger: "2.0"
info:
  description: apiserver
  title: ez-deploy apiserver.
  version: 1.0.0
securityDefinitions:
  key:
    type: apiKey
    name: Cookie
    in: header
security:
  - key: []
paths:
  /user/create:
    post:
      tags:
        - Identity
      operationId: CreateUser
      description: Create User
      security: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInfo'
      responses:
        "201":
          description: Create User Success
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Create User Failed, cause user exist
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
  /user/login:
    post:
      tags:
        - Identity
      operationId: Login
      description: User Login
      security: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInfo'
      responses:
        "200":
          description: Login Success, return user info.
          headers:
            Set-Cookie:
              type: string
              description: Set-Cookie, set token
          schema:
            $ref: '#/definitions/UserInfo'
        "401":
          description: Login Failed
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
  /user/logout:
    get:
      tags:
        - Identity
      operationId: Logout
      description: Logout
      responses:
        "200":
          description: Logout Success
        "401":
          description: Logout Failed, no login
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
  /whoami:
    get:
      tags:
        - Identity
      operationId: Whoami
      description: Get Current User's Info
      responses:
        "200":
          description: Get Current User's Info Success
          schema:
            $ref: '#/definitions/UserInfo'
  /project/create:
    post:
      tags:
        - Project
      operationId: CreateProject
      description: Create Project
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectInfo'
      responses:
        "201":
          description: Create Project Success, return project info.
          schema:
            $ref: '#/definitions/ProjectInfo'
        "409":
          description: Create Project Failed, cause project exist
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
  /project/list:
    get:
      tags:
        - Project
      operationId: ListProject
      description: List All Projects
      responses:
        "200":
          description: List All Projects Success, return project info. (project name, project id, project description)
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectInfo'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
definitions:
  UserInfo:
    type: object
    description: User's Info
    properties:
      id:
        description: id
        type: integer
        example: 1
      user_name:
        description: user's name, not unique
        type: string
        example: foobar
      password:
        description: password
        type: string
        example: foobar123
      email:
        description: email, unique
        type: string
        example: foo@bar.com
  Token:
    type: object
    description: Token Object
    properties:
      id:
        description: id
        type: integer
        example: 1
      user_id:
        description: user's id
        type: integer
        example: 1
      value:
        description: token value
        type: string
        example: zxicgoiuasie
      type:
        description: token type
        type: string
        enum:
        - session
        - private
        - public
      create_at:
        description: create at, unix timestamp
        type: integer
        example: 1528894200
      update_at:
        description: create at, unix timestamp
        type: integer
        example: 1528894200
      expired_at:
        description: expired at, unix timestamp
        type: integer
        example: 1528994200
  Error:
    type: object
    properties:
      message:
        description: 错误信息
        type: string
        example: error message
  ProjectInfo:
    type: object
    description: Project Object
    properties:
      id:
        description: id
        type: integer
        example: 1
      name:
        description: project name
        type: string
        example: foobar
      description:
        description: project description
        type: string
        example: foobar project
      create_at:
        description: create at, unix timestamp
        type: integer
        example: 1528894200
      update_at:
        description: update at, unix timestamp
        type: integer
        example: 1528894200
  ServiceInfo:
    type: object
    description: Service Object
    properties:
      id:
        description: id
        type: integer
        example: 1
      project_id:
        description: project id
        type: integer
        example: 1
      version_id:
        description: version id
        type: integer
        example: 1
      name:
        description: service name
        type: string
        example: foobar
      description:
        description: service description
        type: string
        example: foobar service
      replica:
        description: number of pod replicas
        type: integer
        example: 1
      expose_port:
        description: expose port
        type: integer
        example: 80
      create_at:
        description: create at, unix timestamp
        type: integer
        example: 1528894200
      update_at:
        description: update at, unix timestamp
        type: integer
        example: 1528894200
  ServiceVersion:
    type: object
    description: Service Version Object
    properties:
      id:
        description: id
        type: integer
        example: 1
      service_id:
        description: service id
        type: integer
        example: 1
      image:
        description: image name
        type: string
        example: busybox:latest
      name:
        description: version name
        type: string
        example: foobar
      description:
        description: version description
        type: string
        example: foobar version
      create_at:
        description: create at, unix timestamp
        type: integer
        example: 1528894200
  EnvironmentVariable:
    type: object
    description: Environment Variable for service deploy
    properties:
      id:
        description: id
        type: integer
        example: 1
      service_id:
        description: service id
        type: integer
        example: 1
      name:
        description: environment variable name
        type: string
        example: foobar
      value:
        description: environment variable value
        type: string
        example: foobar
  AuthInfo:
    type: object
    properties:
      user_info:
        description: user's info
        $ref: '#/definitions/UserInfo'
      token:
        description: token
        $ref: '#/definitions/Token'