// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListServiceParams creates a new ListServiceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListServiceParams() *ListServiceParams {
	return &ListServiceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListServiceParamsWithTimeout creates a new ListServiceParams object
// with the ability to set a timeout on a request.
func NewListServiceParamsWithTimeout(timeout time.Duration) *ListServiceParams {
	return &ListServiceParams{
		timeout: timeout,
	}
}

// NewListServiceParamsWithContext creates a new ListServiceParams object
// with the ability to set a context for a request.
func NewListServiceParamsWithContext(ctx context.Context) *ListServiceParams {
	return &ListServiceParams{
		Context: ctx,
	}
}

// NewListServiceParamsWithHTTPClient creates a new ListServiceParams object
// with the ability to set a custom HTTPClient for a request.
func NewListServiceParamsWithHTTPClient(client *http.Client) *ListServiceParams {
	return &ListServiceParams{
		HTTPClient: client,
	}
}

/* ListServiceParams contains all the parameters to send to the API endpoint
   for the list service operation.

   Typically these are written to a http.Request.
*/
type ListServiceParams struct {

	// ProjectID.
	ProjectID *int64

	// ServiceID.
	ServiceID *int64

	// ServiceName.
	ServiceName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list service params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServiceParams) WithDefaults() *ListServiceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list service params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServiceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list service params
func (o *ListServiceParams) WithTimeout(timeout time.Duration) *ListServiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list service params
func (o *ListServiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list service params
func (o *ListServiceParams) WithContext(ctx context.Context) *ListServiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list service params
func (o *ListServiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list service params
func (o *ListServiceParams) WithHTTPClient(client *http.Client) *ListServiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list service params
func (o *ListServiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the list service params
func (o *ListServiceParams) WithProjectID(projectID *int64) *ListServiceParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the list service params
func (o *ListServiceParams) SetProjectID(projectID *int64) {
	o.ProjectID = projectID
}

// WithServiceID adds the serviceID to the list service params
func (o *ListServiceParams) WithServiceID(serviceID *int64) *ListServiceParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the list service params
func (o *ListServiceParams) SetServiceID(serviceID *int64) {
	o.ServiceID = serviceID
}

// WithServiceName adds the serviceName to the list service params
func (o *ListServiceParams) WithServiceName(serviceName *string) *ListServiceParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the list service params
func (o *ListServiceParams) SetServiceName(serviceName *string) {
	o.ServiceName = serviceName
}

// WriteToRequest writes these params to a swagger request
func (o *ListServiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProjectID != nil {

		// query param project_id
		var qrProjectID int64

		if o.ProjectID != nil {
			qrProjectID = *o.ProjectID
		}
		qProjectID := swag.FormatInt64(qrProjectID)
		if qProjectID != "" {

			if err := r.SetQueryParam("project_id", qProjectID); err != nil {
				return err
			}
		}
	}

	if o.ServiceID != nil {

		// query param service_id
		var qrServiceID int64

		if o.ServiceID != nil {
			qrServiceID = *o.ServiceID
		}
		qServiceID := swag.FormatInt64(qrServiceID)
		if qServiceID != "" {

			if err := r.SetQueryParam("service_id", qServiceID); err != nil {
				return err
			}
		}
	}

	if o.ServiceName != nil {

		// query param service_name
		var qrServiceName string

		if o.ServiceName != nil {
			qrServiceName = *o.ServiceName
		}
		qServiceName := qrServiceName
		if qServiceName != "" {

			if err := r.SetQueryParam("service_name", qServiceName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
