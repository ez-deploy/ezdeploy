// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ez-deploy/ezdeploy/models"
)

// UpdateServiceDescriptionReader is a Reader for the UpdateServiceDescription structure.
type UpdateServiceDescriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceDescriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServiceDescriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateServiceDescriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServiceDescriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateServiceDescriptionOK creates a UpdateServiceDescriptionOK with default headers values
func NewUpdateServiceDescriptionOK() *UpdateServiceDescriptionOK {
	return &UpdateServiceDescriptionOK{}
}

/* UpdateServiceDescriptionOK describes a response with status code 200, with default header values.

Update Service Description Success, return service info.
*/
type UpdateServiceDescriptionOK struct {
	Payload *models.ServiceInfo
}

func (o *UpdateServiceDescriptionOK) Error() string {
	return fmt.Sprintf("[PUT /service/update/desc][%d] updateServiceDescriptionOK  %+v", 200, o.Payload)
}
func (o *UpdateServiceDescriptionOK) GetPayload() *models.ServiceInfo {
	return o.Payload
}

func (o *UpdateServiceDescriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceDescriptionForbidden creates a UpdateServiceDescriptionForbidden with default headers values
func NewUpdateServiceDescriptionForbidden() *UpdateServiceDescriptionForbidden {
	return &UpdateServiceDescriptionForbidden{}
}

/* UpdateServiceDescriptionForbidden describes a response with status code 403, with default header values.

Update Service Description Failed, cause do not have permisssion
*/
type UpdateServiceDescriptionForbidden struct {
	Payload *models.Error
}

func (o *UpdateServiceDescriptionForbidden) Error() string {
	return fmt.Sprintf("[PUT /service/update/desc][%d] updateServiceDescriptionForbidden  %+v", 403, o.Payload)
}
func (o *UpdateServiceDescriptionForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateServiceDescriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceDescriptionInternalServerError creates a UpdateServiceDescriptionInternalServerError with default headers values
func NewUpdateServiceDescriptionInternalServerError() *UpdateServiceDescriptionInternalServerError {
	return &UpdateServiceDescriptionInternalServerError{}
}

/* UpdateServiceDescriptionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateServiceDescriptionInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateServiceDescriptionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /service/update/desc][%d] updateServiceDescriptionInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateServiceDescriptionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateServiceDescriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
