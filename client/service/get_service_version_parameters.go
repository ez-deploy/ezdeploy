// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetServiceVersionParams creates a new GetServiceVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServiceVersionParams() *GetServiceVersionParams {
	return &GetServiceVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServiceVersionParamsWithTimeout creates a new GetServiceVersionParams object
// with the ability to set a timeout on a request.
func NewGetServiceVersionParamsWithTimeout(timeout time.Duration) *GetServiceVersionParams {
	return &GetServiceVersionParams{
		timeout: timeout,
	}
}

// NewGetServiceVersionParamsWithContext creates a new GetServiceVersionParams object
// with the ability to set a context for a request.
func NewGetServiceVersionParamsWithContext(ctx context.Context) *GetServiceVersionParams {
	return &GetServiceVersionParams{
		Context: ctx,
	}
}

// NewGetServiceVersionParamsWithHTTPClient creates a new GetServiceVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServiceVersionParamsWithHTTPClient(client *http.Client) *GetServiceVersionParams {
	return &GetServiceVersionParams{
		HTTPClient: client,
	}
}

/* GetServiceVersionParams contains all the parameters to send to the API endpoint
   for the get service version operation.

   Typically these are written to a http.Request.
*/
type GetServiceVersionParams struct {

	// ServiceID.
	ServiceID int64

	// VersionID.
	VersionID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get service version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceVersionParams) WithDefaults() *GetServiceVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get service version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get service version params
func (o *GetServiceVersionParams) WithTimeout(timeout time.Duration) *GetServiceVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service version params
func (o *GetServiceVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service version params
func (o *GetServiceVersionParams) WithContext(ctx context.Context) *GetServiceVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service version params
func (o *GetServiceVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service version params
func (o *GetServiceVersionParams) WithHTTPClient(client *http.Client) *GetServiceVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service version params
func (o *GetServiceVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServiceID adds the serviceID to the get service version params
func (o *GetServiceVersionParams) WithServiceID(serviceID int64) *GetServiceVersionParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get service version params
func (o *GetServiceVersionParams) SetServiceID(serviceID int64) {
	o.ServiceID = serviceID
}

// WithVersionID adds the versionID to the get service version params
func (o *GetServiceVersionParams) WithVersionID(versionID int64) *GetServiceVersionParams {
	o.SetVersionID(versionID)
	return o
}

// SetVersionID adds the versionId to the get service version params
func (o *GetServiceVersionParams) SetVersionID(versionID int64) {
	o.VersionID = versionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetServiceVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param service_id
	qrServiceID := o.ServiceID
	qServiceID := swag.FormatInt64(qrServiceID)
	if qServiceID != "" {

		if err := r.SetQueryParam("service_id", qServiceID); err != nil {
			return err
		}
	}

	// query param version_id
	qrVersionID := o.VersionID
	qVersionID := swag.FormatInt64(qrVersionID)
	if qVersionID != "" {

		if err := r.SetQueryParam("version_id", qVersionID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
