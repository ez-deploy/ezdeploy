// Code generated by go-swagger; DO NOT EDIT.

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ez-deploy/ezdeploy/models"
)

// LoginReader is a Reader for the Login structure.
type LoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoginOK creates a LoginOK with default headers values
func NewLoginOK() *LoginOK {
	return &LoginOK{}
}

/* LoginOK describes a response with status code 200, with default header values.

Login Success, return user info.
*/
type LoginOK struct {

	/* Set-Cookie, set token
	 */
	SetCookie string

	Payload *models.UserInfo
}

func (o *LoginOK) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] loginOK  %+v", 200, o.Payload)
}
func (o *LoginOK) GetPayload() *models.UserInfo {
	return o.Payload
}

func (o *LoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Set-Cookie
	hdrSetCookie := response.GetHeader("Set-Cookie")

	if hdrSetCookie != "" {
		o.SetCookie = hdrSetCookie
	}

	o.Payload = new(models.UserInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginUnauthorized creates a LoginUnauthorized with default headers values
func NewLoginUnauthorized() *LoginUnauthorized {
	return &LoginUnauthorized{}
}

/* LoginUnauthorized describes a response with status code 401, with default header values.

Login Failed
*/
type LoginUnauthorized struct {
	Payload *models.Error
}

func (o *LoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] loginUnauthorized  %+v", 401, o.Payload)
}
func (o *LoginUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginInternalServerError creates a LoginInternalServerError with default headers values
func NewLoginInternalServerError() *LoginInternalServerError {
	return &LoginInternalServerError{}
}

/* LoginInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type LoginInternalServerError struct {
	Payload *models.Error
}

func (o *LoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] loginInternalServerError  %+v", 500, o.Payload)
}
func (o *LoginInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
