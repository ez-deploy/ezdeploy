// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// ListProjectOKCode is the HTTP code returned for type ListProjectOK
const ListProjectOKCode int = 200

/*ListProjectOK List All Projects Success, return project info. (project name, project id, project description)

swagger:response listProjectOK
*/
type ListProjectOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ProjectInfo `json:"body,omitempty"`
}

// NewListProjectOK creates ListProjectOK with default headers values
func NewListProjectOK() *ListProjectOK {

	return &ListProjectOK{}
}

// WithPayload adds the payload to the list project o k response
func (o *ListProjectOK) WithPayload(payload []*models.ProjectInfo) *ListProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list project o k response
func (o *ListProjectOK) SetPayload(payload []*models.ProjectInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ProjectInfo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListProjectInternalServerErrorCode is the HTTP code returned for type ListProjectInternalServerError
const ListProjectInternalServerErrorCode int = 500

/*ListProjectInternalServerError Server Error

swagger:response listProjectInternalServerError
*/
type ListProjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListProjectInternalServerError creates ListProjectInternalServerError with default headers values
func NewListProjectInternalServerError() *ListProjectInternalServerError {

	return &ListProjectInternalServerError{}
}

// WithPayload adds the payload to the list project internal server error response
func (o *ListProjectInternalServerError) WithPayload(payload *models.Error) *ListProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list project internal server error response
func (o *ListProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
