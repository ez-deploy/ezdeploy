// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"

	"github.com/ez-deploy/ezdeploy/models"
)

// ListProjectHandlerFunc turns a function with the right signature into a list project handler
type ListProjectHandlerFunc func(ListProjectParams, *models.AuthInfo) middleware.Responder

// Handle executing the request and returning a response
func (fn ListProjectHandlerFunc) Handle(params ListProjectParams, principal *models.AuthInfo) middleware.Responder {
	return fn(params, principal)
}

// ListProjectHandler interface for that can handle valid list project params
type ListProjectHandler interface {
	Handle(ListProjectParams, *models.AuthInfo) middleware.Responder
}

// NewListProject creates a new http.Handler for the list project operation
func NewListProject(ctx *middleware.Context, handler ListProjectHandler) *ListProject {
	return &ListProject{Context: ctx, Handler: handler}
}

/* ListProject swagger:route GET /project/list Project listProject

List All Projects

*/
type ListProject struct {
	Context *middleware.Context
	Handler ListProjectHandler
}

func (o *ListProject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListProjectParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal *models.AuthInfo
	if uprinc != nil {
		principal = uprinc.(*models.AuthInfo) // this is really a models.AuthInfo, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
