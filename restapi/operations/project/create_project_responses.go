// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// CreateProjectCreatedCode is the HTTP code returned for type CreateProjectCreated
const CreateProjectCreatedCode int = 201

/*CreateProjectCreated Create Project Success, return project info.

swagger:response createProjectCreated
*/
type CreateProjectCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ProjectInfo `json:"body,omitempty"`
}

// NewCreateProjectCreated creates CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {

	return &CreateProjectCreated{}
}

// WithPayload adds the payload to the create project created response
func (o *CreateProjectCreated) WithPayload(payload *models.ProjectInfo) *CreateProjectCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project created response
func (o *CreateProjectCreated) SetPayload(payload *models.ProjectInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectConflictCode is the HTTP code returned for type CreateProjectConflict
const CreateProjectConflictCode int = 409

/*CreateProjectConflict Create Project Failed, cause project exist

swagger:response createProjectConflict
*/
type CreateProjectConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectConflict creates CreateProjectConflict with default headers values
func NewCreateProjectConflict() *CreateProjectConflict {

	return &CreateProjectConflict{}
}

// WithPayload adds the payload to the create project conflict response
func (o *CreateProjectConflict) WithPayload(payload *models.Error) *CreateProjectConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project conflict response
func (o *CreateProjectConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectInternalServerErrorCode is the HTTP code returned for type CreateProjectInternalServerError
const CreateProjectInternalServerErrorCode int = 500

/*CreateProjectInternalServerError Server Error

swagger:response createProjectInternalServerError
*/
type CreateProjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectInternalServerError creates CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {

	return &CreateProjectInternalServerError{}
}

// WithPayload adds the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) WithPayload(payload *models.Error) *CreateProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
