// Code generated by go-swagger; DO NOT EDIT.

package pod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// CheckPodTicketOKCode is the HTTP code returned for type CheckPodTicketOK
const CheckPodTicketOKCode int = 200

/*CheckPodTicketOK Check Pod Ticket Success, return pod ticket info.

swagger:response checkPodTicketOK
*/
type CheckPodTicketOK struct {

	/*
	  In: Body
	*/
	Payload *models.SSHPodTicket `json:"body,omitempty"`
}

// NewCheckPodTicketOK creates CheckPodTicketOK with default headers values
func NewCheckPodTicketOK() *CheckPodTicketOK {

	return &CheckPodTicketOK{}
}

// WithPayload adds the payload to the check pod ticket o k response
func (o *CheckPodTicketOK) WithPayload(payload *models.SSHPodTicket) *CheckPodTicketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check pod ticket o k response
func (o *CheckPodTicketOK) SetPayload(payload *models.SSHPodTicket) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckPodTicketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckPodTicketForbiddenCode is the HTTP code returned for type CheckPodTicketForbidden
const CheckPodTicketForbiddenCode int = 403

/*CheckPodTicketForbidden Check Pod Ticket Failed, cause do not have permisssion

swagger:response checkPodTicketForbidden
*/
type CheckPodTicketForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckPodTicketForbidden creates CheckPodTicketForbidden with default headers values
func NewCheckPodTicketForbidden() *CheckPodTicketForbidden {

	return &CheckPodTicketForbidden{}
}

// WithPayload adds the payload to the check pod ticket forbidden response
func (o *CheckPodTicketForbidden) WithPayload(payload *models.Error) *CheckPodTicketForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check pod ticket forbidden response
func (o *CheckPodTicketForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckPodTicketForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckPodTicketInternalServerErrorCode is the HTTP code returned for type CheckPodTicketInternalServerError
const CheckPodTicketInternalServerErrorCode int = 500

/*CheckPodTicketInternalServerError Server Error

swagger:response checkPodTicketInternalServerError
*/
type CheckPodTicketInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckPodTicketInternalServerError creates CheckPodTicketInternalServerError with default headers values
func NewCheckPodTicketInternalServerError() *CheckPodTicketInternalServerError {

	return &CheckPodTicketInternalServerError{}
}

// WithPayload adds the payload to the check pod ticket internal server error response
func (o *CheckPodTicketInternalServerError) WithPayload(payload *models.Error) *CheckPodTicketInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check pod ticket internal server error response
func (o *CheckPodTicketInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckPodTicketInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
