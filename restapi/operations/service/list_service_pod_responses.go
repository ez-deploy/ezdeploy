// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// ListServicePodOKCode is the HTTP code returned for type ListServicePodOK
const ListServicePodOKCode int = 200

/*ListServicePodOK List Service Pod Success, return service pod info.

swagger:response listServicePodOK
*/
type ListServicePodOK struct {

	/*
	  In: Body
	*/
	Payload *ListServicePodOKBody `json:"body,omitempty"`
}

// NewListServicePodOK creates ListServicePodOK with default headers values
func NewListServicePodOK() *ListServicePodOK {

	return &ListServicePodOK{}
}

// WithPayload adds the payload to the list service pod o k response
func (o *ListServicePodOK) WithPayload(payload *ListServicePodOKBody) *ListServicePodOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service pod o k response
func (o *ListServicePodOK) SetPayload(payload *ListServicePodOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePodOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePodForbiddenCode is the HTTP code returned for type ListServicePodForbidden
const ListServicePodForbiddenCode int = 403

/*ListServicePodForbidden List Service Pod Failed, cause do not have permisssion

swagger:response listServicePodForbidden
*/
type ListServicePodForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServicePodForbidden creates ListServicePodForbidden with default headers values
func NewListServicePodForbidden() *ListServicePodForbidden {

	return &ListServicePodForbidden{}
}

// WithPayload adds the payload to the list service pod forbidden response
func (o *ListServicePodForbidden) WithPayload(payload *models.Error) *ListServicePodForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service pod forbidden response
func (o *ListServicePodForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePodForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePodInternalServerErrorCode is the HTTP code returned for type ListServicePodInternalServerError
const ListServicePodInternalServerErrorCode int = 500

/*ListServicePodInternalServerError Server Error

swagger:response listServicePodInternalServerError
*/
type ListServicePodInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServicePodInternalServerError creates ListServicePodInternalServerError with default headers values
func NewListServicePodInternalServerError() *ListServicePodInternalServerError {

	return &ListServicePodInternalServerError{}
}

// WithPayload adds the payload to the list service pod internal server error response
func (o *ListServicePodInternalServerError) WithPayload(payload *models.Error) *ListServicePodInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service pod internal server error response
func (o *ListServicePodInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePodInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
