// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// UpdateServiceVersionOKCode is the HTTP code returned for type UpdateServiceVersionOK
const UpdateServiceVersionOKCode int = 200

/*UpdateServiceVersionOK Update Service Version Success, return service info.

swagger:response updateServiceVersionOK
*/
type UpdateServiceVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceInfo `json:"body,omitempty"`
}

// NewUpdateServiceVersionOK creates UpdateServiceVersionOK with default headers values
func NewUpdateServiceVersionOK() *UpdateServiceVersionOK {

	return &UpdateServiceVersionOK{}
}

// WithPayload adds the payload to the update service version o k response
func (o *UpdateServiceVersionOK) WithPayload(payload *models.ServiceInfo) *UpdateServiceVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service version o k response
func (o *UpdateServiceVersionOK) SetPayload(payload *models.ServiceInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceVersionForbiddenCode is the HTTP code returned for type UpdateServiceVersionForbidden
const UpdateServiceVersionForbiddenCode int = 403

/*UpdateServiceVersionForbidden Update Service Version Failed, cause do not have permisssion

swagger:response updateServiceVersionForbidden
*/
type UpdateServiceVersionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceVersionForbidden creates UpdateServiceVersionForbidden with default headers values
func NewUpdateServiceVersionForbidden() *UpdateServiceVersionForbidden {

	return &UpdateServiceVersionForbidden{}
}

// WithPayload adds the payload to the update service version forbidden response
func (o *UpdateServiceVersionForbidden) WithPayload(payload *models.Error) *UpdateServiceVersionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service version forbidden response
func (o *UpdateServiceVersionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceVersionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceVersionInternalServerErrorCode is the HTTP code returned for type UpdateServiceVersionInternalServerError
const UpdateServiceVersionInternalServerErrorCode int = 500

/*UpdateServiceVersionInternalServerError Server Error

swagger:response updateServiceVersionInternalServerError
*/
type UpdateServiceVersionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceVersionInternalServerError creates UpdateServiceVersionInternalServerError with default headers values
func NewUpdateServiceVersionInternalServerError() *UpdateServiceVersionInternalServerError {

	return &UpdateServiceVersionInternalServerError{}
}

// WithPayload adds the payload to the update service version internal server error response
func (o *UpdateServiceVersionInternalServerError) WithPayload(payload *models.Error) *UpdateServiceVersionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service version internal server error response
func (o *UpdateServiceVersionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceVersionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
