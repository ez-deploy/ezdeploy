// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/ezdeploy/models"
)

// UpdateServiceDescriptionOKCode is the HTTP code returned for type UpdateServiceDescriptionOK
const UpdateServiceDescriptionOKCode int = 200

/*UpdateServiceDescriptionOK Update Service Description Success, return service info.

swagger:response updateServiceDescriptionOK
*/
type UpdateServiceDescriptionOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceInfo `json:"body,omitempty"`
}

// NewUpdateServiceDescriptionOK creates UpdateServiceDescriptionOK with default headers values
func NewUpdateServiceDescriptionOK() *UpdateServiceDescriptionOK {

	return &UpdateServiceDescriptionOK{}
}

// WithPayload adds the payload to the update service description o k response
func (o *UpdateServiceDescriptionOK) WithPayload(payload *models.ServiceInfo) *UpdateServiceDescriptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service description o k response
func (o *UpdateServiceDescriptionOK) SetPayload(payload *models.ServiceInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceDescriptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceDescriptionForbiddenCode is the HTTP code returned for type UpdateServiceDescriptionForbidden
const UpdateServiceDescriptionForbiddenCode int = 403

/*UpdateServiceDescriptionForbidden Update Service Description Failed, cause do not have permisssion

swagger:response updateServiceDescriptionForbidden
*/
type UpdateServiceDescriptionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceDescriptionForbidden creates UpdateServiceDescriptionForbidden with default headers values
func NewUpdateServiceDescriptionForbidden() *UpdateServiceDescriptionForbidden {

	return &UpdateServiceDescriptionForbidden{}
}

// WithPayload adds the payload to the update service description forbidden response
func (o *UpdateServiceDescriptionForbidden) WithPayload(payload *models.Error) *UpdateServiceDescriptionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service description forbidden response
func (o *UpdateServiceDescriptionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceDescriptionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceDescriptionInternalServerErrorCode is the HTTP code returned for type UpdateServiceDescriptionInternalServerError
const UpdateServiceDescriptionInternalServerErrorCode int = 500

/*UpdateServiceDescriptionInternalServerError Server Error

swagger:response updateServiceDescriptionInternalServerError
*/
type UpdateServiceDescriptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceDescriptionInternalServerError creates UpdateServiceDescriptionInternalServerError with default headers values
func NewUpdateServiceDescriptionInternalServerError() *UpdateServiceDescriptionInternalServerError {

	return &UpdateServiceDescriptionInternalServerError{}
}

// WithPayload adds the payload to the update service description internal server error response
func (o *UpdateServiceDescriptionInternalServerError) WithPayload(payload *models.Error) *UpdateServiceDescriptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service description internal server error response
func (o *UpdateServiceDescriptionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceDescriptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
