// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "apiserver",
    "title": "ez-deploy apiserver.",
    "version": "1.0.0"
  },
  "paths": {
    "/project/create": {
      "post": {
        "description": "Create Project",
        "tags": [
          "Project"
        ],
        "operationId": "CreateProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create Project Success, return project info.",
            "schema": {
              "$ref": "#/definitions/ProjectInfo"
            }
          },
          "409": {
            "description": "Create Project Failed, cause project exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/list": {
      "get": {
        "description": "List All Projects",
        "tags": [
          "Project"
        ],
        "operationId": "ListProject",
        "responses": {
          "200": {
            "description": "List All Projects Success, return project info. (project name, project id, project description)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectInfo"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "security": [],
        "description": "Create User",
        "tags": [
          "Identity"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create User Success",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Create User Failed, cause user exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "security": [],
        "description": "User Login",
        "tags": [
          "Identity"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Success, return user info.",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            },
            "headers": {
              "Set-Cookie": {
                "type": "string",
                "description": "Set-Cookie, set token"
              }
            }
          },
          "401": {
            "description": "Login Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "description": "Logout",
        "tags": [
          "Identity"
        ],
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "Logout Success"
          },
          "401": {
            "description": "Logout Failed, no login",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "description": "Get Current User's Info",
        "tags": [
          "Identity"
        ],
        "operationId": "Whoami",
        "responses": {
          "200": {
            "description": "Get Current User's Info Success",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthInfo": {
      "type": "object",
      "properties": {
        "token": {
          "description": "token",
          "$ref": "#/definitions/Token"
        },
        "user_info": {
          "description": "user's info",
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "AuthorityRole": {
      "description": "Authority Role Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "project_id": {
          "description": "project id",
          "type": "integer",
          "example": 1
        },
        "role": {
          "description": "role",
          "type": "string",
          "example": "admin"
        },
        "user_id": {
          "description": "user id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "EnvironmentVariable": {
      "description": "Environment Variable for service deploy",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "environment variable name",
          "type": "string",
          "example": "foobar"
        },
        "service_id": {
          "description": "service id",
          "type": "integer",
          "example": 1
        },
        "value": {
          "description": "environment variable value",
          "type": "string",
          "example": "foobar"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "错误信息",
          "type": "string",
          "example": "error message"
        }
      }
    },
    "ProjectInfo": {
      "description": "Project Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "project description",
          "type": "string",
          "example": "foobar project"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "project name",
          "type": "string",
          "example": "foobar"
        },
        "owner_id": {
          "description": "owner's user_id",
          "type": "integer",
          "example": 1
        },
        "update_at": {
          "description": "update at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        }
      }
    },
    "RolePermission": {
      "description": "Role Permissions Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "permission": {
          "description": "permission",
          "type": "string",
          "enum": [
            "read",
            "write",
            "delete",
            "deploy"
          ]
        },
        "role_id": {
          "description": "AuthorityRole id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "ServiceInfo": {
      "description": "Service Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "service description",
          "type": "string",
          "example": "foobar service"
        },
        "expose_port": {
          "description": "expose port",
          "type": "integer",
          "example": 80
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "service name",
          "type": "string",
          "example": "foobar"
        },
        "project_id": {
          "description": "project id",
          "type": "integer",
          "example": 1
        },
        "replica": {
          "description": "number of pod replicas",
          "type": "integer",
          "example": 1
        },
        "update_at": {
          "description": "update at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "version_id": {
          "description": "version id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "ServiceVersion": {
      "description": "Service Version Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "version description",
          "type": "string",
          "example": "foobar version"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "image": {
          "description": "image name",
          "type": "string",
          "example": "busybox:latest"
        },
        "name": {
          "description": "version name",
          "type": "string",
          "example": "foobar"
        },
        "service_id": {
          "description": "service id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "Token": {
      "description": "Token Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "expired_at": {
          "description": "expired at, unix timestamp",
          "type": "integer",
          "example": 1528994200
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "type": {
          "description": "token type",
          "type": "string",
          "enum": [
            "session",
            "private",
            "public"
          ]
        },
        "update_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "user_id": {
          "description": "user's id",
          "type": "integer",
          "example": 1
        },
        "value": {
          "description": "token value",
          "type": "string",
          "example": "zxicgoiuasie"
        }
      }
    },
    "UserInfo": {
      "description": "User's Info",
      "type": "object",
      "properties": {
        "email": {
          "description": "email, unique",
          "type": "string",
          "example": "foo@bar.com"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "password": {
          "description": "password",
          "type": "string",
          "example": "foobar123"
        },
        "user_name": {
          "description": "user's name, not unique",
          "type": "string",
          "example": "foobar"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "Cookie",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "apiserver",
    "title": "ez-deploy apiserver.",
    "version": "1.0.0"
  },
  "paths": {
    "/project/create": {
      "post": {
        "description": "Create Project",
        "tags": [
          "Project"
        ],
        "operationId": "CreateProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create Project Success, return project info.",
            "schema": {
              "$ref": "#/definitions/ProjectInfo"
            }
          },
          "409": {
            "description": "Create Project Failed, cause project exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/list": {
      "get": {
        "description": "List All Projects",
        "tags": [
          "Project"
        ],
        "operationId": "ListProject",
        "responses": {
          "200": {
            "description": "List All Projects Success, return project info. (project name, project id, project description)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectInfo"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "security": [],
        "description": "Create User",
        "tags": [
          "Identity"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create User Success",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Create User Failed, cause user exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "security": [],
        "description": "User Login",
        "tags": [
          "Identity"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Success, return user info.",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            },
            "headers": {
              "Set-Cookie": {
                "type": "string",
                "description": "Set-Cookie, set token"
              }
            }
          },
          "401": {
            "description": "Login Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "description": "Logout",
        "tags": [
          "Identity"
        ],
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "Logout Success"
          },
          "401": {
            "description": "Logout Failed, no login",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "description": "Get Current User's Info",
        "tags": [
          "Identity"
        ],
        "operationId": "Whoami",
        "responses": {
          "200": {
            "description": "Get Current User's Info Success",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthInfo": {
      "type": "object",
      "properties": {
        "token": {
          "description": "token",
          "$ref": "#/definitions/Token"
        },
        "user_info": {
          "description": "user's info",
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "AuthorityRole": {
      "description": "Authority Role Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "project_id": {
          "description": "project id",
          "type": "integer",
          "example": 1
        },
        "role": {
          "description": "role",
          "type": "string",
          "example": "admin"
        },
        "user_id": {
          "description": "user id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "EnvironmentVariable": {
      "description": "Environment Variable for service deploy",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "environment variable name",
          "type": "string",
          "example": "foobar"
        },
        "service_id": {
          "description": "service id",
          "type": "integer",
          "example": 1
        },
        "value": {
          "description": "environment variable value",
          "type": "string",
          "example": "foobar"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "错误信息",
          "type": "string",
          "example": "error message"
        }
      }
    },
    "ProjectInfo": {
      "description": "Project Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "project description",
          "type": "string",
          "example": "foobar project"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "project name",
          "type": "string",
          "example": "foobar"
        },
        "owner_id": {
          "description": "owner's user_id",
          "type": "integer",
          "example": 1
        },
        "update_at": {
          "description": "update at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        }
      }
    },
    "RolePermission": {
      "description": "Role Permissions Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "permission": {
          "description": "permission",
          "type": "string",
          "enum": [
            "read",
            "write",
            "delete",
            "deploy"
          ]
        },
        "role_id": {
          "description": "AuthorityRole id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "ServiceInfo": {
      "description": "Service Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "service description",
          "type": "string",
          "example": "foobar service"
        },
        "expose_port": {
          "description": "expose port",
          "type": "integer",
          "example": 80
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "service name",
          "type": "string",
          "example": "foobar"
        },
        "project_id": {
          "description": "project id",
          "type": "integer",
          "example": 1
        },
        "replica": {
          "description": "number of pod replicas",
          "type": "integer",
          "example": 1
        },
        "update_at": {
          "description": "update at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "version_id": {
          "description": "version id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "ServiceVersion": {
      "description": "Service Version Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "description": {
          "description": "version description",
          "type": "string",
          "example": "foobar version"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "image": {
          "description": "image name",
          "type": "string",
          "example": "busybox:latest"
        },
        "name": {
          "description": "version name",
          "type": "string",
          "example": "foobar"
        },
        "service_id": {
          "description": "service id",
          "type": "integer",
          "example": 1
        }
      }
    },
    "Token": {
      "description": "Token Object",
      "type": "object",
      "properties": {
        "create_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "expired_at": {
          "description": "expired at, unix timestamp",
          "type": "integer",
          "example": 1528994200
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "type": {
          "description": "token type",
          "type": "string",
          "enum": [
            "session",
            "private",
            "public"
          ]
        },
        "update_at": {
          "description": "create at, unix timestamp",
          "type": "integer",
          "example": 1528894200
        },
        "user_id": {
          "description": "user's id",
          "type": "integer",
          "example": 1
        },
        "value": {
          "description": "token value",
          "type": "string",
          "example": "zxicgoiuasie"
        }
      }
    },
    "UserInfo": {
      "description": "User's Info",
      "type": "object",
      "properties": {
        "email": {
          "description": "email, unique",
          "type": "string",
          "example": "foo@bar.com"
        },
        "id": {
          "description": "id",
          "type": "integer",
          "example": 1
        },
        "password": {
          "description": "password",
          "type": "string",
          "example": "foobar123"
        },
        "user_name": {
          "description": "user's name, not unique",
          "type": "string",
          "example": "foobar"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "Cookie",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
}
